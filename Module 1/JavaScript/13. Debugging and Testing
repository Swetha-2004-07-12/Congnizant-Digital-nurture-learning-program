form.addEventListener("submit", function(event) {
  event.preventDefault();
  console.log("Form submitted");

  clearErrors();
  const { name, email, event: selectedEvent } = form.elements;

  console.log("Captured values:", {
    name: name.value,
    email: email.value,
    event: selectedEvent.value
  });

  // Validation
  let valid = true;
  if (!name.value.trim()) {
    showError("nameError", "Name is required");
    valid = false;
  }
  if (!email.value.trim() || !validateEmail(email.value)) {
    showError("emailError", "Valid email required");
    valid = false;
  }
  if (!selectedEvent.value) {
    showError("eventError", "Please select an event");
    valid = false;
  }

  if (!valid) {
    console.warn("Form validation failed");
    return;
  }

  const userData = {
    name: name.value.trim(),
    email: email.value.trim(),
    event: selectedEvent.value,
  };

  console.log("Sending payload:", userData);

  setTimeout(() => {
    fetch("https://jsonplaceholder.typicode.com/posts", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(userData),
    })
    .then(response => {
      console.log("Fetch response:", response);
      if (!response.ok) throw new Error("Failed network response");
      return response.json();
    })
    .then(data => {
      console.log("Server returned:", data);
      successMessage.textContent = "Registration successful!";
    })
    .catch(error => {
      console.error("Fetch failed:", error);
      successMessage.textContent = "Error occurred during registration.";
    });
  }, 1500);
});
